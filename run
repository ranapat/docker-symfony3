#!/bin/bash

read -p "Do you want to create isolated network y/N? " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo    # (optional) move to a new line
    docker network create --driver bridge isolated
    printf "\n\nisolated network created\n\n"
else
    printf "not creating isolated network\n\n"
fi

read -p "Do you want to run mongodb-server y/N? " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo    # (optional) move to a new line
    docker run --name mongodb-server -p 27017:27017 --network isolated -d mongo
    printf "\n\nmongodb-server runned\n\n"
else
    printf "not running mongodb\n\n"
fi

read -p "Do you want to run mysql-server y/N? " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo    # (optional) move to a new line
    docker run --name mysql-server -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root --network isolated -d mysql
    printf "\n\nmysql-server runned\n\n"
else
    printf "not running mysql\n\n"
fi

if [ -n "$1" ]; then
   VERSION=$1
else
    printf "Version shall be set as a parameter.\nExample:\n\trun YOUR_VERSION\n\n"

    read -p "Do you want to set VERSION to 0.0.1 y/N? " -n 1 -r
    echo    # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo    # (optional) move to a new line
        VERSION=0.0.1
    else
        echo "exiting"
        exit -1
    fi
fi

read -p "Do you want to run image with version $VERSION y/N? " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo    # (optional) move to a new line
    docker run --name dev-server -p 8080:80 -v $(pwd)/src:/var/www/html --network isolated -d app/server:$VERSION
    docker exec -it dev-server bash
else
    printf "not running app/server:$VERSION\n\n"
fi
